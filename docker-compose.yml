version: '3'

services: 
  # nginx:
  #   image: nginx:1.15-alpine
  #   restart: unless-stopped
  #   volumes:
  #     - ./proxy/nginx:/etc/nginx/conf.d
  #     - ./proxy/certbot/conf:/etc/letsencrypt
  #     - ./proxy/certbot/www:/var/www/certbot
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  #   depends_on: 
  #     - backend
  # certbot:
  #   image: certbot/certbot
  #   restart: unless-stopped
  #   volumes:
  #     - ./proxy/certbot/conf:/etc/letsencrypt
  #     - ./proxy/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  # proxy-service:
  #   image: nginx:1.19.4-alpine
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - 80:80
  #     - 443:443
  #   depends_on:
  #     - decks-backend

  reverse-proxy:
    image: nginx:1.19.4-alpine
    container_name: reverse_proxy_server_container
    depends_on:
      - decks-backend
    ports: 
      - 80:80
    volumes: 
      - ./nginx.conf:/etc/nginx/nginx.conf
  decks-backend:
    image: decks_backend
    build: .
    container_name: decks-container
    depends_on: 
      - mongodb

  mongodb:
    image: mongo:latest
    container_name: mongodb-container
    ports:
      - 27017:27017
    volumes:
      - data:/data/db

    
volumes:
  data: